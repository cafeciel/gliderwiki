<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<!--
  // 1. 태그 리스트를 출력한다.
  -->

<mapper namespace="CommonManage">

	<!-- 최근 한달간의 태그 목록을 조회한다. -->
	<select id="CommonManage.getTagList" resultType="wikiTagVo">
	select /* CommonManage.getTagList - 최근 한달간 태그 목록 조회 */
		   we_tag as weTag
		,  count(*) as tagCnt
     from  we_wiki_tag
	where  we_use_yn = 'Y'
	and    we_ins_date >= #{month}
	group by we_tag
	order by tagCnt desc, weTag
	limit #{maxLimit}
	</select>

	<!-- 선택된 태그의 목록을 조회한다.  -->
	<select id="CommonManage.getTagNameList" parameterType="String" resultType="int">
	select /* CommonManage.getTagNameList - 선택 태그 목록 리스트 조회하기 */
	     we_wiki_idx		as weWikiIdx
	from we_wiki_tag
	where we_use_yn = 'Y'
	and we_tag = #{tagName}
	</select>



	<!-- 태그가 입력된 대상 위키 목록을 조회한다.  -->
	<select id="CommonManage.getWikiListByTagIdx"  resultType="wikiVo">
	    select /* CommonManage.getWikiListByTagIdx - 태그가 입력된 대상 위키 목록을 조회  */
	    	   b.we_wiki_idx		as weWikiIdx
			 , b.we_space_idx		as weSpaceIdx
			 , b.we_wiki_title	as weWikiTitle
		     , b.we_wiki_revision as weWikiRevision
		     , b.we_wiki_status   as weWikiStatus
		     , DATE_FORMAT(b.we_ins_date,  '%Y-%m-%d %H:%i:%s') as weInsDate
		     , b.we_ins_user		as weInsUser
		     , b.we_upd_user		as weUpdUser
		     , b.we_upd_date		as weUpdDate
		     , (SELECT a.we_user_nick FROM we_user a WHERE a.we_user_idx = b.we_ins_user) AS weUserNick
		from we_wiki b
		where 1 = 1
		and   b.we_wiki_idx in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
		    #{item}
		</foreach>
		and   b.we_use_yn ='Y'
	</select>


	<!-- 태그 목록으로 조회된 위키의 공간 정보를 조회한다.  -->
	<select id="CommonManage.getSpaceInfoByTagIdx"  resultType="spaceInfoVo">
	    select /* CommonManage.getSpaceInfoByTagIdx -  태그 목록으로 조회된 위키의 공간 정보를 조회  */
	    	   a.we_space_idx    AS spaceIdx
		     , a.we_space_name   AS spaceName
		     , a.we_space_desc   AS spaceDesc
		     , a.we_space_exposed AS exposed
		     , a.we_view_privacy  AS viewPrivacy
		     , a.we_edit_privacy  AS editPrivacy
		from we_space a
		where 1 = 1
		and   a.we_use_yn = 'Y'
	    and   a.we_space_idx in
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
		    #{item}
		</foreach>
	</select>


	<!-- 서브 메뉴 목록 조회 -->
	<select id="CommonManage.getSubMenuByAuth" resultType="weMenu">
	select /* CommonManage.getSubMenuByAuth - 서브 메뉴 목록 조회 */
		   we_menu_idx
	     , we_menu_name
	     , we_menu_order_idx
	     , we_menu_parent_idx
	     , we_menu_depth
	     , we_menu_url
	     , we_use_yn
	     , we_menu_type
	     , we_access_level
	     , we_menu_group
	  FROM WE_MENU
	 WHERE we_menu_parent_idx = #{weMenuIdx}
	 <choose>
	 <when test="weUserIdx == null or weUserIdx == 0 ">
		AND we_access_level = 0
	 </when>
	 <otherwise>
		AND we_access_level &lt;= #{weGrade}
	 </otherwise>
	 </choose>
	    AND we_use_yn = 'Y'
	    AND we_menu_type = 'C'
	ORDER BY we_menu_order_idx
	</select>

	<!-- 타이틀 메뉴 목록 조회 -->
	<select id="CommonManage.getTitleMenuByAuth" resultType="weMenu">
	select /* CommonManage.getTitleMenuByAuth - 타이틀 메뉴 목록 조회 */
		   we_menu_idx
	     , we_menu_name
	     , we_menu_order_idx
	     , we_menu_parent_idx
	     , we_menu_depth
	     , we_menu_url
	     , we_use_yn
	     , we_menu_type
	     , we_access_level
	     , we_menu_group
	  FROM WE_MENU
	 WHERE we_menu_type = #{weMenuType}
	 <choose>
	 <when test="weUserIdx == null or weUserIdx == 0 ">
		AND we_access_level = 0
	 </when>
	 <otherwise>
		AND we_access_level &lt;= #{weGrade}
	 </otherwise>
	 </choose>
	    AND we_use_yn = 'Y'
	    AND we_menu_group = #{weMenuGroup}
	ORDER BY we_menu_order_idx
	</select>


	<!-- 즐겨찾기 내역을 삭제한다  -->
	<update id="CommonManage.delFavorite" parameterType="weFavorite">
		UPDATE we_favorite  /* CommonManage.delFavorite - 즐겨찾기 내역을 삭제한다 */
		SET    we_use_yn = #{we_use_yn}
     		  ,we_del_date = now()
		WHERE  we_user_idx = #{we_user_idx}
		<choose>
		<when test="we_favorite_type.toString() == 'WIKI'">
		AND    we_wiki_idx = #{we_wiki_idx }
		AND    we_favorite_type='WIKI'
		</when>
		<otherwise>
		AND    we_space_idx = #{we_space_idx }
		AND    we_favorite_type='SPACE'
		</otherwise>
		</choose>
	    AND    we_use_yn = 'Y'
	</update>


	<!-- 내가 맺은 인맥을 끊는다. -->
	<update id="CommonManage.delRelationDWR" parameterType="weAddFriend">
		UPDATE we_add_friend  /* CommonManage.delRelationDWR - 인맥을 삭제한다 */
		SET    we_use_yn = 'N'
     		  ,we_del_date = now()
		WHERE  we_user_idx = #{we_user_idx}
	    AND    we_target_user_idx =  #{we_target_user_idx}
	</update>

	<!-- 안 읽은 알림을 모두 읽은것으로 처리한다. -->
	<update id="CommonManage.updateAllRead" parameterType="int">
		UPDATE we_alarm_info  /* CommonManage.updateAllRead - 안 읽은 알림을 모두 읽은것으로 처리한다. */
		SET    we_read_yn = 1
		WHERE  we_target_user_idx = #{userIdx}
	</update>

	<!-- 실시간알림여부를 조회한다.  -->
	<select id="CommonManage.realNotiView"  resultType="String">
	    select /* CommonManage.getSpaceInfoByTagIdx -  실시간알림여부를 조회한다.  */
	    	   we_noti_checked
		from we_profile
		where we_user_idx = #{userIdx}
	</select>

	<!-- 실시간알림뷰 필드를 업데이트한다 -->
	<update id="CommonManage.changeRealTimeView">
		UPDATE we_profile  /* CommonManage.updateAllRead - 실시간알림뷰 필드를 업데이트한다. */
		SET    we_noti_checked = #{isView}
		WHERE  we_user_idx = #{userIdx}
	</update>

	<!-- 실시간알림뷰 필드를 업데이트한다 -->
	<update id="CommonManage.updateFavorite" parameterType="weFavorite">
		UPDATE we_favorite  /* CommonManage.updateAllRead - 실시간알림뷰 필드를 업데이트한다. */
		SET    we_use_yn = 'Y'
		WHERE  we_user_idx=#{we_user_idx}
		<choose>
		<when test="we_favorite_type.toString() == 'SPACE'">
		AND we_favorite_type='SPACE'
		AND we_space_idx=#{we_space_idx}
		</when>
		<otherwise>
		AND we_favorite_type='WIKI'
		AND we_wiki_idx=#{we_wiki_idx}
		</otherwise>
		</choose>
	</update>

	<update id="CommonManage.updateUserPoint" parameterType="weProfile">
		UPDATE we_profile  /* CommonManage.updateUserPoint - 대상 사용자의 포인트를 더한다.  */
		SET    we_point = we_point + #{we_point}
		WHERE  we_user_idx = #{we_user_idx}
	</update>


	<select id="CommonManage.getWikiSearchList" resultType="wikiVo">
		SELECT b.we_wiki_idx		as weWikiIdx
			 , b.we_space_idx		as weSpaceIdx
			 , b.we_wiki_title		as weWikiTitle
			 , b.we_wiki_text       as weWikiText
		     , b.we_wiki_revision   as weWikiRevision
		     , b.we_wiki_status     as weWikiStatus
		     , b.we_wiki_quota      as weWikiQuota
		     , b.we_wiki_agree      as weWikiAgree        
			 , b.we_wiki_view_cnt   as weWikiViewCnt
		     , DATE_FORMAT(b.we_ins_date,  '%Y-%m-%d %H:%i:%s') as weInsDate
		     , b.we_ins_user		as weInsUser
		     , b.we_upd_user		as weUpdUser
		     , b.we_upd_date		as weUpdDate
		     , (SELECT a.we_user_nick FROM we_user a WHERE a.we_user_idx = b.we_ins_user) AS weUserNick
		     , CASE WHEN b.we_wiki_protect = '0' THEN '기본' 
				    WHEN b.we_wiki_protect = '1' THEN '준보호' 
				    WHEN b.we_wiki_protect = '2' THEN '보호' 
				    WHEN b.we_wiki_protect = '3' THEN '신고' 
				    WHEN b.we_wiki_protect = '4' THEN '삭제예정' 
				    WHEN b.we_wiki_protect = '6' THEN '이의제기' 
				    WHEN b.we_wiki_protect = '7' THEN '토론' 
				    WHEN b.we_wiki_protect = '8' THEN '삭제복구' 
				    WHEN b.we_wiki_protect = '9' THEN '관리자삭제' 
			   END  AS weWikiProtect                
		FROM    we_wiki b
		WHERE 1 = 1
		<if test="wiki_text != null and wiki_text != '' ">
		AND 	we_wiki_text  LIKE CONCAT('%', #{wiki_text}, '%')
		</if>
		AND     we_use_yn = 'Y'
	</select>
	

</mapper>
